// +build !ignore_autogenerated

// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/elastic/cloud-on-k8s/pkg/apis/common/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfig) DeepCopyInto(out *ElasticsearchConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	if in.assocConf != nil {
		in, out := &in.assocConf, &out.assocConf
		*out = new(v1.AssociationConf)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfig.
func (in *ElasticsearchConfig) DeepCopy() *ElasticsearchConfig {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigList) DeepCopyInto(out *ElasticsearchConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ElasticsearchConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigList.
func (in *ElasticsearchConfigList) DeepCopy() *ElasticsearchConfigList {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigOperation) DeepCopyInto(out *ElasticsearchConfigOperation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigOperation.
func (in *ElasticsearchConfigOperation) DeepCopy() *ElasticsearchConfigOperation {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigSpec) DeepCopyInto(out *ElasticsearchConfigSpec) {
	*out = *in
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]ElasticsearchConfigOperation, len(*in))
		copy(*out, *in)
	}
	out.ElasticsearchRef = in.ElasticsearchRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigSpec.
func (in *ElasticsearchConfigSpec) DeepCopy() *ElasticsearchConfigSpec {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigStatus) DeepCopyInto(out *ElasticsearchConfigStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigStatus.
func (in *ElasticsearchConfigStatus) DeepCopy() *ElasticsearchConfigStatus {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigStatus)
	in.DeepCopyInto(out)
	return out
}
